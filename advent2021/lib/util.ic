-- ::= import "core.ic"
cstd ::= import "c/stdlib.ic"

#{export}
ParseInt64 ::= (s: [/]char) -> i64 {
  return cstd.atol(s.data)
}
#{export}
ParseInt64 ::= (c: char) -> i64 {
  return (builtin.ascii_decode(c) - builtin.ascii_decode(!'0')) as i64
}

#{export}
Abs ::= (x: i64) -> i64 {
  if (x >= 0) {
    return x
  } else {
    return -x
  }
}

#{export}
Max ::= (x: i64, y: i64) -> i64 {
  if (x >= y) {
    return x
  } else {
    return y
  }
}
#{export}
Max ::= (x: i64, y: i64, z: i64) -> i64 {
  return Max(Max(x, y), z)
}
#{export}
Max ::= (x: i64, y: i64, z: i64, w: i64) -> i64 {
  return Max(Max(x, y), Max(z, w))
}
